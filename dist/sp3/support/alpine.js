var m = Object.defineProperty;
var v = (t, e, n) => e in t ? m(t, e, { enumerable: !0, configurable: !0, writable: !0, value: n }) : t[e] = n;
var l = (t, e, n) => (v(t, typeof e != "symbol" ? e + "" : e, n), n);
import g from "../libs/lib-alpine.js";
const d = {
  name: "spot",
  handler(t, { expression: e, modifiers: n }, { evaluate: r, cleanup: o }) {
    var u;
    if (!(t instanceof HTMLElement))
      return;
    const i = () => {
      var h;
      const s = r(e);
      document.dispatchEvent(new CustomEvent("hotspot:click", {
        bubbles: !0,
        detail: {
          data: {
            asset: t.id ?? t.dataset.asset ?? (s == null ? void 0 : s.asset),
            label: `${n[0] ?? ""}`,
            url: `${(s == null ? void 0 : s.asset) ?? ((h = t.dataset) == null ? void 0 : h.url) ?? ""}`
          },
          el: t
        }
      }));
    }, c = () => {
      document.dispatchEvent(new CustomEvent("hotspot:touchstart", {
        bubbles: !0,
        detail: {
          data: r(e),
          labels: n,
          el: t
        }
      }));
    }, a = document.createElement("div");
    a.style.width = `${t.clientWidth}px`, a.style.height = `${t.clientHeight}px`, a.style.position = "absolute", a.addEventListener("click", i), a.addEventListener("touchstart", c), o(() => {
      a.removeEventListener("click", i), a.removeEventListener("touchstart", c);
    }), (u = t == null ? void 0 : t.style) != null && u.position || (t.style.position = "relative"), t.prepend(a);
  }
}, y = {
  getWeekDayShortName: (t) => [
    "Sun",
    "Mon",
    "Tue",
    "Wen",
    "Thu",
    "Fri",
    "Sat"
  ][t] ?? "",
  getMonthShortName: (t) => ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"][t] ?? "",
  asDMy(t) {
    return `${this.getWeekDayShortName(t.getDay())}, ${this.getMonthShortName(t.getMonth())} ${t.getFullYear().toString().substring(2)}`;
  },
  format(t, e = "DMy") {
    return this[`as${e}`] ? this[`as${e}`](t) : "";
  }
}, p = {
  name: "date-format",
  handler(t, { modifiers: e, expression: n }, { evaluate: r }) {
    if (t instanceof HTMLElement) {
      e.length < 1 && (e[0] = "DMy");
      try {
        const o = /* @__PURE__ */ new Date(`${r(n)}` ?? t.textContent);
        t.innerText = y.format(o, e[0]);
      } catch {
        return;
      }
    }
  }
};
class S {
  constructor() {
    l(this, "alpine", g);
  }
  boot({ debug: e }) {
    return e && console.log("[PadSquad]:Alpine service BOOTED."), this.alpine;
  }
  key() {
    return "alpine";
  }
  async register({ debug: e }) {
    e && console.log("[PadSquad]:Alpine service REGISTERED."), this.alpine.directive(d.name, d.handler), this.alpine.directive(p.name, p.handler);
  }
}
export {
  S as default
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
